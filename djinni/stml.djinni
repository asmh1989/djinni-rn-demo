@import "event_loop.djinni"
@import "thread.djinni"

# log
log_interface = interface +o +j {
  d(tag: string, msg: string);
  w(tag: string, msg: string);
  e(tag: string, msg: string);
  i(tag: string, msg: string);
}

# cache
cache = interface +c {
  get(key: string, defaultVaue: string): string;
  find(key: string): bool;
  del(key: string): bool;
  put(key: string, value: string): bool;
  getRootPath(): string;
}

# stml
stml = interface +c {
  start(server: string, port: i32);
  setKeeplive(alive: bool);
  setTimeout(timeout: i32);
  forceReconnect();
  post(msg: string, showloading: bool);
  bye();
  setListener(listener: stml_listener);
  static create(log: log_interface, cache: cache, ui_thread: event_loop, launcher: thread_launcher): stml;
}

stml_listener = interface +j +o{
  connecting();
  connected();
  disconnect(error: string);
  received(msg: string);
  sended(msg: string);
  sending(msg: string, showloading: bool);
}
