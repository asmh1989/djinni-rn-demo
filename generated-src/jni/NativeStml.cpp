// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from stml.djinni

#include "NativeStml.hpp"  // my header
#include "Marshal.hpp"
#include "NativeStmlListener.hpp"

namespace djinni_generated {

NativeStml::NativeStml() : ::djinni::JniInterface<::smobiler::Stml, NativeStml>("com/smobiler/djinni/Stml$CppProxy") {}

NativeStml::~NativeStml() = default;


CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::smobiler::Stml>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1start(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_server, jint j_port)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->start(::djinni::String::toCpp(jniEnv, j_server),
                   ::djinni::I32::toCpp(jniEnv, j_port));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1setKeeplive(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jboolean j_alive)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->setKeeplive(::djinni::Bool::toCpp(jniEnv, j_alive));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1forceReconnect(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->forceReconnect();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1post(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_msg, jboolean j_showloading)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->post(::djinni::String::toCpp(jniEnv, j_msg),
                  ::djinni::Bool::toCpp(jniEnv, j_showloading));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1bye(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->bye();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_smobiler_djinni_Stml_00024CppProxy_native_1setListener(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::smobiler::Stml>(nativeRef);
        ref->setListener(::djinni_generated::NativeStmlListener::toCpp(jniEnv, j_listener));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_smobiler_djinni_Stml_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::smobiler::Stml::create();
        return ::djinni::release(::djinni_generated::NativeStml::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
